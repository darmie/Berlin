// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_berlin_lib_ErrCC
#define INCLUDED_berlin_lib_ErrCC

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_0e79851890b51e32_14_new)
HX_DECLARE_CLASS2(berlin,lib,ErrCC)

namespace berlin{
namespace lib{


class HXCPP_CLASS_ATTRIBUTES ErrCC_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ErrCC_obj OBJ_;
		ErrCC_obj();

	public:
		enum { _hx_ClassId = 0x584280e2 };

		void __construct( ::Dynamic charClasses);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="berlin.lib.ErrCC")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"berlin.lib.ErrCC"); }

		hx::ObjectPtr< ErrCC_obj > __new( ::Dynamic charClasses) {
			hx::ObjectPtr< ErrCC_obj > __this = new ErrCC_obj();
			__this->__construct(charClasses);
			return __this;
		}

		static hx::ObjectPtr< ErrCC_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic charClasses) {
			ErrCC_obj *__this = (ErrCC_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ErrCC_obj), true, "berlin.lib.ErrCC"));
			*(void **)__this = ErrCC_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_0e79851890b51e32_14_new)
HXDLIN(  14)		( ( ::berlin::lib::ErrCC)(__this) )->charClasses = charClasses;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ErrCC_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ErrCC","\x25","\x15","\x57","\x06"); }

		 ::Dynamic charClasses;
};

} // end namespace berlin
} // end namespace lib

#endif /* INCLUDED_berlin_lib_ErrCC */ 
