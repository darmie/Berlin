// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"?",
"C:\\HaxeToolkit\\haxe\\std/StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Date.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Std.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Type.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/Utf8.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/Log.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/format/JsonPrinter.hx",
"berlin/Main.hx",
"berlin/lib/AST.hx",
"berlin/lib/Continuations.hx",
"berlin/lib/ErrAny.hx",
"berlin/lib/ErrCC.hx",
"berlin/lib/ErrChar.hx",
"berlin/lib/Exp.hx",
"berlin/lib/MachineConfiguration.hx",
"berlin/lib/MachineState.hx",
"berlin/lib/NonTerminal.hx",
"berlin/lib/ParseError.hx",
"berlin/lib/Parser.hx",
"berlin/lib/RawError.hx",
"berlin/lib/Util.hx",
"berlin/lib/Value.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\?",
"C:\\HaxeToolkit\\haxe\\std\\StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Date.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Std.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Type.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\Utf8.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\Log.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\format\\JsonPrinter.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\Main.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\AST.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\Continuations.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\ErrAny.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\ErrCC.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\ErrChar.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\Exp.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\MachineConfiguration.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\MachineState.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\NonTerminal.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\ParseError.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\Parser.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\RawError.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\Util.hx",
"C:\\Users\\Damilare\\RemoteJob\\Berlin\\src\\berlin\\lib\\Value.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"Date",
"Reflect",
"Std",
"StringBuf",
"StringTools",
"Type",
"berlin.Main",
"berlin.lib.AST",
"berlin.lib.Continuations",
"berlin.lib.ErrAny",
"berlin.lib.ErrCC",
"berlin.lib.ErrChar",
"berlin.lib.Exp",
"berlin.lib.MachineConfiguration",
"berlin.lib.MachineState",
"berlin.lib.NonTerminal",
"berlin.lib.ParseError",
"berlin.lib.Parser",
"berlin.lib.RawError",
"berlin.lib.Util",
"berlin.lib.Assert",
"berlin.lib.Value",
"haxe.Log",
"haxe.Utf8",
"haxe.ds.StringMap",
"haxe.format.JsonPrinter",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
